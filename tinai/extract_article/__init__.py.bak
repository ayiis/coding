#!/usr/bin/env python
# -*- coding: utf-8 -*-
# - author: ayiis@2019/02/26
"""
Mainly use boilerpipe.extract to get clean text of the whole page.
But first, we should take the article out by readability, so that boilerpipe can do it's job
    to grep the content we are intrested in.

However, boilerpipe is kind of out of date and no one is maintaining it.
dragnet not works very often

Here goes the link:
    https://github.com/misja/python-boilerpipe
    https://github.com/buriy/python-readability

bad Example:
    url = 'http://forthxu.com/blog/article/73.html'
    url = 'http://bm.szhk.com/2019/04/30/283029943930124.html'

Guess it's not gona work for complex links.

"""
from boilerpipe.extract import Extractor
from readability import Document
# from dragnet import extract_content, extract_content_and_comments

__all__ = ["extract_article"]


def extract_article(html_content):
    doc = Document(html_content)
    title = doc.title()
    html = doc.summary(True)
    extractor = Extractor(extractor='ArticleExtractor', html=html)
    article = extractor.getText()
    # article = extract_content(html)

    return title, article


if __name__ == "__main__":
    import requests

    url = 'https://news.cnblogs.com/n/624615/'
    url = 'https://tech.sina.com.cn/i/2019-04-29/doc-ihvhiqax5802337.shtml'
    # url = 'http://forthxu.com/blog/article/73.html'
    response = requests.get(url)

    title, article = extract_article(response.content)
    print("title:", title)
    print("article:", article)
